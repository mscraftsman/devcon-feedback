// generated by gocipe; DO NOT EDIT

syntax = "proto3";

package admin;

import "models.proto";
option go_package = "github.com/mscraftsman/devcon-feedback/services/admin";

// Filter represents a filter that can be applied for listing requests
message Filter {
    string Field     = 1;
    string Operation = 2;
    string Value     = 3;
}

// GetRequest represents a request to allow getting a single entity
message GetRequest {
    string Key = 1;
    string ID = 2;
}

// ListRequest represents a request to allow listing of entities
message ListRequest {
    string Key = 1;
    models.ListOpts ListOpts = 2;
    repeated admin.Filter Filters = 3;
}

// CountResponse represents a response to a Count<Entity> Request
message CountResponse {
    int64 Count = 1;
}

// DeleteRequest represents a request to allow deleting an entity
message DeleteRequest {
    string Key = 1;
    string ID = 2;
}
// DeleteResponse represents result to a DeleteRequest
message DeleteResponse {}

// UploadOpts represents message to define upload options of files
message UploadOpts {
    bool Watermark = 1;
}

// UploadRequest represents message to allow uploading of files
message UploadRequest {
    string Key      = 1;
    string ID       = 2;
    string Field    = 3;
    string Filename = 4;
    bytes  Content  = 5;
    UploadOpts UploadOptions = 6;
}

// UploadResponse represents result to an UploadRequest
message UploadResponse {
    string URI = 1;
}

// LookupRequest represents a request to lookup an entity by its label
message LookupRequest {
    string Key  = 1;
    string Term = 2;
    models.ListOpts ListOpts = 3;   
}

// LookupResult represents one (of many) results for an entity lookup request
message LookupResult {
    string ID     = 1;
    string Label  = 2;
    string Status = 3;
}

// LookupResponse represents a series of results to a lookup request
message LookupResponse {
    repeated LookupResult Result = 1;
}

service Admin {
/**
 * [BEGIN SERVICE] Feedback
 */
    // CreateFeedback allows creation of entity of type Feedback
    rpc CreateFeedback(CreateFeedbackRequest) returns (CreateFeedbackResponse);
    
    // GetFeedback allows getting a single entity of type Feedback
    rpc GetFeedback(GetRequest) returns (GetFeedbackResponse);
    
    // ListFeedbacks allows listing all entity of type Feedback
    rpc ListFeedbacks(ListRequest) returns (ListFeedbacksResponse);

    // CountFeedbacks allows counting the listing all entity of type Feedback
    rpc CountFeedbacks(ListRequest) returns (CountResponse);
    
    // UpdateFeedback allows updating one entity of type Feedback
    rpc UpdateFeedback(UpdateFeedbackRequest) returns (UpdateFeedbackResponse);
    
    // DeleteFeedback allows deleting an entity of type Feedback
    rpc DeleteFeedback(DeleteRequest) returns (DeleteResponse);
    rpc LookupFeedbacks(LookupRequest) returns (LookupResponse);
/**
 * [END SERVICES] Feedback
 */

/**
 * [BEGIN SERVICE] Visitor
 */
    // CreateVisitor allows creation of entity of type Visitor
    rpc CreateVisitor(CreateVisitorRequest) returns (CreateVisitorResponse);
    
    // GetVisitor allows getting a single entity of type Visitor
    rpc GetVisitor(GetRequest) returns (GetVisitorResponse);
    
    // ListVisitors allows listing all entity of type Visitor
    rpc ListVisitors(ListRequest) returns (ListVisitorsResponse);

    // CountVisitors allows counting the listing all entity of type Visitor
    rpc CountVisitors(ListRequest) returns (CountResponse);
    
    // UpdateVisitor allows updating one entity of type Visitor
    rpc UpdateVisitor(UpdateVisitorRequest) returns (UpdateVisitorResponse);
    
    // DeleteVisitor allows deleting an entity of type Visitor
    rpc DeleteVisitor(DeleteRequest) returns (DeleteResponse);
    rpc LookupVisitors(LookupRequest) returns (LookupResponse);
/**
 * [END SERVICES] Visitor
 */

/**
 * [BEGIN SERVICE] Rating
 */
    // CreateRating allows creation of entity of type Rating
    rpc CreateRating(CreateRatingRequest) returns (CreateRatingResponse);
    
    // GetRating allows getting a single entity of type Rating
    rpc GetRating(GetRequest) returns (GetRatingResponse);
    
    // ListRatings allows listing all entity of type Rating
    rpc ListRatings(ListRequest) returns (ListRatingsResponse);

    // CountRatings allows counting the listing all entity of type Rating
    rpc CountRatings(ListRequest) returns (CountResponse);
    
    // UpdateRating allows updating one entity of type Rating
    rpc UpdateRating(UpdateRatingRequest) returns (UpdateRatingResponse);
    
    // DeleteRating allows deleting an entity of type Rating
    rpc DeleteRating(DeleteRequest) returns (DeleteResponse);
    rpc LookupRatings(LookupRequest) returns (LookupResponse);
/**
 * [END SERVICES] Rating
 */

}
/**
 * [BEGIN MESSAGES] Feedback
 */

// CreateFeedbackRequest represents a request to allow creation of entity of type Feedback
message CreateFeedbackRequest {
    string Key = 1;
    models.Feedback Feedback = 2;
}
// CreateFeedbackResponse represents result to a CreateFeedbackRequest
message CreateFeedbackResponse {
    models.Feedback Feedback = 1;
}

// GetFeedbackResponse represents result to a GetRequest
message GetFeedbackResponse {
    models.Feedback Feedback = 1;
}

// ListFeedbacksResponse represents result to a ListRequest
message ListFeedbacksResponse {
    repeated models.Feedback Feedbacks = 1;
}

// UpdateFeedbackRequest represents a request to allow updating one entity of type Feedback
message UpdateFeedbackRequest {
    string Key = 1;
    models.Feedback Feedback = 2;
}
// UpdateFeedbackResponse represents result to an UpdateFeedbackRequest
message UpdateFeedbackResponse {
    models.Feedback Feedback = 1;
}
/**
 * [END MESSAGES] Feedback
 */

/**
 * [BEGIN MESSAGES] Visitor
 */

// CreateVisitorRequest represents a request to allow creation of entity of type Visitor
message CreateVisitorRequest {
    string Key = 1;
    models.Visitor Visitor = 2;
}
// CreateVisitorResponse represents result to a CreateVisitorRequest
message CreateVisitorResponse {
    models.Visitor Visitor = 1;
}

// GetVisitorResponse represents result to a GetRequest
message GetVisitorResponse {
    models.Visitor Visitor = 1;
}

// ListVisitorsResponse represents result to a ListRequest
message ListVisitorsResponse {
    repeated models.Visitor Visitors = 1;
}

// UpdateVisitorRequest represents a request to allow updating one entity of type Visitor
message UpdateVisitorRequest {
    string Key = 1;
    models.Visitor Visitor = 2;
}
// UpdateVisitorResponse represents result to an UpdateVisitorRequest
message UpdateVisitorResponse {
    models.Visitor Visitor = 1;
}
/**
 * [END MESSAGES] Visitor
 */

/**
 * [BEGIN MESSAGES] Rating
 */

// CreateRatingRequest represents a request to allow creation of entity of type Rating
message CreateRatingRequest {
    string Key = 1;
    models.Rating Rating = 2;
}
// CreateRatingResponse represents result to a CreateRatingRequest
message CreateRatingResponse {
    models.Rating Rating = 1;
}

// GetRatingResponse represents result to a GetRequest
message GetRatingResponse {
    models.Rating Rating = 1;
}

// ListRatingsResponse represents result to a ListRequest
message ListRatingsResponse {
    repeated models.Rating Ratings = 1;
}

// UpdateRatingRequest represents a request to allow updating one entity of type Rating
message UpdateRatingRequest {
    string Key = 1;
    models.Rating Rating = 2;
}
// UpdateRatingResponse represents result to an UpdateRatingRequest
message UpdateRatingResponse {
    models.Rating Rating = 1;
}
/**
 * [END MESSAGES] Rating
 */
